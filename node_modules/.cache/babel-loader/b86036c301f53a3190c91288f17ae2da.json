{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\msi\\\\Downloads\\\\Github\\\\Tenzies_game_app_using_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\msi\\\\Downloads\\\\Github\\\\Tenzies_game_app_using_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\msi\\\\Downloads\\\\Github\\\\Tenzies_game_app_using_react\\\\src\\\\components\\\\Main.jsx\";\nimport React from 'react';\nimport Dice from './Dice';\nimport Confetti from 'react-confetti';\nvar Main = function Main() {\n  var _React$useState = React.useState(diceValues()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dices = _React$useState2[0],\n    setDices = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    tenzies = _React$useState4[0],\n    setTenzies = _React$useState4[1];\n  React.useEffect(function () {\n    var allHeld = dices.every(function (die) {\n      return die.isHeld;\n    });\n    var firstValue = dices[0].value;\n    var allSameValue = dices.every(function (die) {\n      return die.value === firstValue;\n    });\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n      console.log(\"Dice state changed\");\n    }\n  }, [dices]);\n  function diceValues(oldValue) {\n    var elArr = [];\n    for (var i = 0; i < 10; i++) {\n      if (oldValue) {\n        if (!oldValue[i].isHeld) {\n          elArr.push({\n            value: Math.floor(Math.random() * 6) + 1,\n            isHeld: false\n          });\n        } else {\n          elArr.push(oldValue[i]);\n        }\n      } else {\n        elArr.push({\n          value: Math.floor(Math.random() * 6) + 1,\n          isHeld: false\n        });\n      }\n    }\n    return elArr;\n  }\n  function rollDice(e) {\n    setDices(diceValues(dices));\n    if (tenzies) {\n      setDices(diceValues());\n      setTenzies(false);\n    }\n  }\n  function _toggle(id) {\n    setDices(function (prevDices) {\n      var newDice = prevDices.map(function (prevDice, index) {\n        if (index != id) {\n          return _objectSpread({}, prevDice);\n        } else {\n          return _objectSpread({}, prevDice, {\n            isHeld: !prevDice.isHeld\n          });\n        }\n      });\n      return newDice;\n    });\n  }\n  var diceEl = dices.map(function (diceObj, index) {\n    return /*#__PURE__*/React.createElement(Dice, {\n      value: diceObj.value,\n      isHeld: diceObj.isHeld,\n      toggle: function toggle() {\n        return _toggle(index);\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, tenzies && /*#__PURE__*/React.createElement(Confetti, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Tenzies\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"instructions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dice-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, diceEl), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"roll-btn\",\n    onClick: rollDice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }\n  }, tenzies ? \"New Game\" : \"Roll\"));\n};\nexport default Main;","map":{"version":3,"names":["React","Dice","Confetti","Main","useState","diceValues","dices","setDices","tenzies","setTenzies","useEffect","allHeld","every","die","isHeld","firstValue","value","allSameValue","console","log","oldValue","elArr","i","push","Math","floor","random","rollDice","e","toggle","id","prevDices","newDice","map","prevDice","index","diceEl","diceObj"],"sources":["C:/Users/msi/Downloads/Github/Tenzies_game_app_using_react/src/components/Main.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport Dice from './Dice'\r\nimport Confetti from 'react-confetti'\r\nconst Main = () => {\r\n    \r\n    const [dices,setDices] = React.useState(diceValues());\r\n    const [tenzies,setTenzies] = React.useState(false);\r\n\r\n    React.useEffect(()=>{\r\n        const allHeld = dices.every(die => die.isHeld)\r\n        const firstValue = dices[0].value\r\n        const allSameValue = dices.every(die => die.value === firstValue)\r\n        if (allHeld && allSameValue) {\r\n            setTenzies(true)\r\n            console.log(\"Dice state changed\")\r\n        }\r\n    },[dices])\r\n\r\n    function diceValues(oldValue){\r\n        let elArr = [];\r\n        for(let i = 0;i<10;i++){\r\n            if(oldValue){\r\n                if(!oldValue[i].isHeld){\r\n                    elArr.push({\r\n                        value:Math.floor(Math.random()*6) + 1,\r\n                        isHeld:false,\r\n                    });\r\n                }else {\r\n                    elArr.push(oldValue[i])\r\n                }\r\n            } else {\r\n                elArr.push({\r\n                    value:Math.floor(Math.random()*6) + 1,\r\n                    isHeld:false,\r\n                });\r\n            }\r\n        }\r\n        return elArr;\r\n    }\r\n\r\n    function rollDice(e){\r\n        setDices(diceValues(dices))\r\n        if(tenzies){\r\n            setDices(diceValues())\r\n            setTenzies(false);\r\n        }\r\n    }\r\n\r\n    function toggle(id){\r\n        setDices((prevDices)=>{\r\n           let newDice =  prevDices.map((prevDice,index)=>{\r\n                if(index!=id){\r\n                    return {...prevDice}\r\n                } else {\r\n                    return {...prevDice,isHeld:!prevDice.isHeld}\r\n                }\r\n            })\r\n            return newDice;\r\n        })\r\n    }\r\n\r\n    \r\n    const diceEl = dices.map((diceObj,index)=>{\r\n        return (<Dice \r\n            value={diceObj.value} \r\n            isHeld={diceObj.isHeld} \r\n            toggle={()=>toggle(index)} \r\n            key={index}/>)\r\n    })\r\n\r\n  return (\r\n    <div className='main'>\r\n        {tenzies && <Confetti/>}\r\n        <h1 className=\"title\">Tenzies</h1>\r\n            <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\r\n        <div className='dice-container'>\r\n           {diceEl}\r\n        </div>\r\n           <button className='roll-btn' onClick={rollDice}>{tenzies ? \"New Game\" : \"Roll\"}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}